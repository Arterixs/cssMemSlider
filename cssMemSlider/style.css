* {
    box-sizing: border-box;
    margin: 0;
}

body {
    display: flex;
    justify-content: center;
    padding-top: 10vh;
}

.wrapper {
    height: 80vh;
    width: 60vw;
    border: solid 1px #000;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2.5vh;
}

input {
    display: none;
}

.memsSlider {
    width: inherit;
    height: 60vh;
    border: solid 2px rgb(168, 7, 7);
    display: flex;
}

.slide {
    width: inherit;
    height: inherit;
}

img {
    width: inherit;
    height: inherit;
     /* object-fit: scale-down;  */
}

.elements {
    width: inherit;
    display: flex;
    justify-content: space-between;
}

.string {
    display: flex;
    display: inline-block;
    border: solid 1px rgb(223, 226, 21);
    height: 1.2rem;
    width: auto;
    overflow: hidden;
}


.control {
    display: flex;
    justify-content: space-between;
    width: 5rem;
}

.btn {
    width: 1rem;
    height: 1rem;
    border: solid 2px rgb(56, 22, 207);
    border-radius: 50%;
    cursor: pointer;
}


#r1:checked ~ .elements > .control label:nth-of-type(1),
#r2:checked ~ .elements > .control label:nth-of-type(2),
#r3:checked ~ .elements > .control label:nth-of-type(3),
#r4:checked ~ .elements > .control label:nth-of-type(4) {
    background: rgb(80, 88, 201);
    
}

#r1:checked ~ .elements > .nameMems {
    transform: translate(0, 0);
}

#r2:checked ~ .elements > .string .nameMems {
    transform: translate(0, -100%);
}

#r3:checked ~ .elements > .string .nameMems {
    transform: translate(0, -200%);
}

#r4:checked ~ .elements > .string .nameMems {
    transform: translate(0, -300%);
}




#r1:checked ~ .memsSlider > .slide img {
    transform: translate(0);
}

#r2:checked ~ .memsSlider > .slide img {
    transform: translate(-100%);
}

#r3:checked ~ .memsSlider > .slide img {
    transform: translate(-200%);
}

#r4:checked ~ .memsSlider> .slide img {
    transform: translate(-300%);
}